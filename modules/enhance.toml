[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = ['DeinUpdate']
if = '!exists("g:vscode")'

[[plugins]]
repo = 'haya14busa/dein-command.vim'
on_cmd = ['Dein']
if = '!exists("g:vscode")'

# [[plugins]]
# repo = 'rhysd/accelerated-jk'
# on_map = '<Plug>'
# hook_add = '''
#   nmap <silent>n <Plug>(accelerated_jk_gj)
#   nmap <silent>e <Plug>(accelerated_jk_gk)
# '''

[[plugins]]
repo = 'luochen1990/rainbow'
on_ft = ["html", "css", "javascript", "javascriptreact","go","rust","vim","less","sass","json","toml"]
if = '!exists("g:vscode")'
hook_source = '''
	let g:rainbow_active = 1
'''

# [[plugins]]
# repo = 'itchyny/vim-cursorword'
# on_event = ["BufReadPre","BufNewFile"]
# hook_source = '''
#    augroup user_plugin_cursorword
#       autocmd!
#       autocmd FileType defx,denite,fern,clap,vista let b:cursorword = 0
#       autocmd WinEnter * if &diff || &pvw | let b:cursorword = 0 | endif
#       autocmd InsertEnter * let b:cursorword = 0
#       autocmd InsertLeave * let b:cursorword = 1
#     augroup END
# '''

[[plugins]]
repo     = 'tpope/vim-surround'
on_event = ["BufReadPre","BufNewFile"]

[[plugins]]
repo = 'jiangmiao/auto-pairs'
on_event = ["BufReadPre","BufNewFile"]
if = '!exists("g:vscode")'

[[plugins]]
repo   = 'voldikss/vim-floaterm'
on_cmd = ['FloatermNew', 'FloatermToggle', 'FloatermPrev', 'FloatermNext', 'FloatermSend']
if = '!exists("g:vscode")'
hook_source= '''
    let g:floaterm_position = 'center'
    let g:floaterm_wintype = 'floating'
    " Set floaterm window's background to black
    hi Floaterm guibg=black
    " Set floating window border line color to cyan, and background to orange
    hi FloatermBorder guibg=none guifg=cyan
'''

# [[plugins]]
# repo   = 'simnalamburt/vim-mundo'
# on_cmd = 'MundoToggle'

# [[plugins]]
# repo     = 'junegunn/vim-easy-align'
# on_cmd   = '<Plug>(EasyAlign)'
# hook_add = '''
#     " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
#     vmap <Enter> <Plug>(EasyAlign)

#     " Start interactive EasyAlign for a motion/text object (e.g. gaip)
#     nmap ga <Plug>(EasyAlign)
# '''

# [[plugins]]
# repo = "junegunn/fzf"
# hook_post_update = '''
#     call fzf#install()
# '''

# [[plugins]]
# repo = "junegunn/fzf.vim"
# on_cmd = ['Files', 'Buffers']
# hook_add = '''
#     let g:fzf_preview_window = 'right:60%'
#     nnoremap <silent> <Leader>ff :Files<CR>
#     nnoremap <silent> <Leader>fb :Buffers<CR>
#     nnoremap <silent> <Leader>frg :Rg<CR>
#     nnoremap <silent> <Leader>fag :Ag<CR>
# '''

[[plugins]]
repo = 'Yggdroot/LeaderF'
if = '!exists("g:vscode")'
hook_post_update = '''
  ./install.sh
'''
on_map = ['<leader>ff']
hook_add = '''
let g:Lf_CommandMap = {'<C-K>': ['<C-e>'], '<C-J>': ['<C-n>']}

let g:Lf_WindowPosition = 'popup'
let g:Lf_PreviewInPopup = 1
let g:Lf_StlSeparator = { 'left': "\ue0b0", 'right': "\ue0b2" }
let g:Lf_PreviewResult = {'Function': 0, 'BufTag': 0 }

let g:Lf_ShortcutF = "<leader>ff"
noremap <leader>fb :<C-U><C-R>=printf("Leaderf buffer %s", "")<CR><CR>
noremap <leader>fm :<C-U><C-R>=printf("Leaderf mru %s", "")<CR><CR>
noremap <leader>fl :<C-U><C-R>=printf("Leaderf line %s", "")<CR><CR>
noremap <leader>fr :<C-U><C-R>=printf("Leaderf rg %s", "")<CR><CR>
'''

[[plugins]]
repo = 'liuchengxu/vim-which-key'
on_cmd = ['WhichKey', 'WhichKey!']
if = '!exists("g:vscode")'
hook_add = '''
	nnoremap <silent> <leader> :<c-u>WhichKey '<space>'<CR>
	vnoremap <silent> <leader> :<c-u>WhichKeyVisual '<space>'<CR>
'''
hook_source = '''
	let g:which_key_map =  {}
	call which_key#register('<Space>', "g:which_key_map")

	" LeaderF
	let g:which_key_map.f = {
      \ 'name' : '+LeaderF' ,
      \ 'f' : [':Leaderf file', 'Leaderf file'],
      \ 'b' : [':Leaderf buffer', 'Leaderf buffer'],
      \ 'm' : [':Leaderf mru', 'Leaderf mru'],
      \ 'l' : [':Leaderf line', 'Leaderf line'],
      \ 'r' : [':Leaderf rg', 'Leaderf rg'],
      \ }


	" QuickRun
	let g:which_key_map.r = {
      \ 'name' : '+QuickRun' ,
	  \ }

	" Test
	let g:which_key_map.t = {
      \ 'name' : '+Test' ,
	  \ }

	" Git
	let g:which_key_map.g = {
      \ 'name' : '+Git' ,
			\ 't': ['GitGutterToggle', 'GitGutterToggle'],
			\ 'g': ['LazyGit', 'LazyGit'],
			\ 'f': ['Git', 'Fugitive'],
			\ }
'''

[[plugins]]
repo = 'francoiscabrol/ranger.vim'
on_cmd = ['Ranger']
if = '!exists("g:vscode")'
hook_add = '''
  let g:ranger_map_keys = 0
'''

